plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'groovy'
}


test {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation "com.auth0:java-jwt:${jwtVersion}"
        implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
        implementation "org.javassist:javassist:${javassistVersion}"
        // workaround for ${javassist.version} placeholder issue
        implementation 'mysql:mysql-connector-java'
        implementation "org.hibernate:hibernate-validator:${hibernateValidatorVersion}"
        implementation 'log4j:log4j'
        implementation "com.amazonaws:aws-java-sdk:${awsSqsVersion}"
        implementation "com.itextpdf:itextpdf:${itextVersion}"

        annotationProcessor 'org.projectlombok:lombok'
        compileOnly 'org.projectlombok:lombok'

        testImplementation "com.tngtech.archunit:archunit-junit4:${archUnitVersion}"
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation "org.codehaus.groovy:groovy-all:${groovyVersion}"
        testImplementation platform("org.spockframework:spock-bom:${spockVersion}")
        testImplementation 'org.spockframework:spock-core'
        testImplementation "com.h2database:h2:${h2Version}"
        testImplementation "org.spockframework:spock-spring:${spockVersion}"
        testImplementation "org.testcontainers:spock:${testContainerVersion}"
        testImplementation "org.testcontainers:mongodb:${testContainerVersion}"
        testImplementation "org.testcontainers:mysql:${testContainerVersion}"
    }
    useJUnitPlatform()
}

test {
    filter {
        excludeTestsMatching "*IT"
    }
}

task cleanStatics(type: Delete) {
    delete "src/main/resources/public"
}
clean.dependsOn cleanStatics
